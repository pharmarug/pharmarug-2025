[
  {
    "objectID": "program.html",
    "href": "program.html",
    "title": "China Pharma RUG meeting program",
    "section": "",
    "text": "Time\nTopic\nPresenter\nLocation\n\n\n\n\n8:30-9:00\nRegistration\n\n\n\n\n9:00-9:10\nWelcome\nYan Qiao, BeiGene, Chengeng Tian, Novartis\nBeijing, Shanghai\n\n\n9:10-9:20\nOpening Remarks\nLeo Li, BeiGene\nBeijing\n\n\n9:20-9:50\nMost recent update on NEST project\nJoe Zhu, Roche\nShanghai\n\n\n9:50-10:20\nBaseline shiny framework with TIDYTLG\nDavid Fan, Janssen\nShanghai\n\n\n10:20-10:50\nBreak\n\n\n\n\n10:50-11:10\nUse R to replace SAS in ADaM programming\nChengcheng Ma, Legend;\nNanjing\n\n\n11:10-11:30\nHands-on experience on ADaM validation using R\nHaoyong Yu, Novartis\nShanghai\n\n\n11:30-12:00\nUsing R in CDISC Standards Application\nVictor Wu, Data Science\nBeijing\n\n\n12:00-13:00\nLunch Break\n\n\n\n\n13:00-13:30\nCreate your own RStudio project template\nJie Wang, Janssen\nShanghai\n\n\n13:30-14:00\nShiny app deployment architecture for enterprise\nQinghua Liao, Fosun\nBeijing\n\n\n14:00-14:30\nPractice in building efficient R Shinny application for clinical trial report\nQing Zou, Sanofi\nBeijing\n\n\n14:30-15:00\nPractice in improving execution efficiency in R\nChangming Yang, BeiGene\nBeijing\n\n\n15:00-15:30\nBreak\n\n\n\n\n15:30-16:00\nPractice for comparing R data frame with SAS output\nCarlos Pang, Novartis\nShanghai\n\n\n16:00-16:30\nDebugging strategy for R\nShuang Gao, BeiGene\nBeijing\n\n\n16:30-16:55\n{mmrm}: a robust and comprehensive R package for implementing mixed models for repeated measures\nLiming Li, Roche\nShanghai\n\n\n16:55-17:20\nA Shiny app for creating datasets to support popPK analysis\nJingya Wang, Hengrui\nShanghai\n\n\n17:20-17:30\nClosing Remarks\nYanli Chang, Novartis\nShanghai\n\n\n\n\n\nJoe Zhu, Roche\nJoe Zhu is the lead software engineer of the NEST project at Roche. He has a PhD in statistics. Before joining Roche, Joe took two postdoc research positions at the University of Oxford, with a research focus on statistical genomics. He is an open source software advocator and developer; more details can be found at http://www.github.com/shajoezhu.\nABSTRACT New data types require new tools and methodologies and there is a need in biometrics to respond quickly to understand the ever increasing growth of data generated from clinical trials. In recent years, analysis software tools have taken huge leaps forward. Therefore, we have seized the business opportunity to build an R-based toolkit that will allow us to meet these challenges.\nSo far, we have open sourced several of our key packages on the Github. Many of our packages are well received by users. I would like to share some of our most recent updates including new open-source packages and tlg-catalog.\n\n\n\nDavid Fan, Janssen\nYubo (David) Fan is an Associate Director Portfolio Lead at Janssen China R&D. David started his pharmaceutical industry career in 2007 as a Biostatistician in PAREXEL Johnson & Johnson group and joined Janssen China R&D in 2014 as Statistical Programming Manager. Since then, he has grown as a leader with increasing responsibilities and built China CVM statistical programming team starting from April 2017.\nCurrently David is leading a local team with 11 members and responsible for managing CVM and NS portfolios. With high interest and great passion in R technology, David joined Janssen global R implementation initiative in 2019 and has been serving as the sub-team lead for baseline shiny group from 2021. Under his leadership, shiny sub-team generated the draft version of baseline shiny framework at the end of 2022 and is collaborating with study teams for piloting. David holds a PhD in Epidemiology and Health Statistics from Soochow University.\nABSTRACT Open-source technologies have been rapidly growing in recent years, more and more pharmaceutical companies are starting to use R as an alternative to SAS or additional software for clinical trial reporting. To ease the transition for programmers from SAS to R, C&SP group in Janssen R&D developed the tidytlg package for R to create the tables, listings, and graphs (TLG) for clinical study reports. This package has been published to the pharmaverse repository on GitHub.\nBaseline Shiny framework is an R package that helps user to create interactive Shiny applications, simply by shuffling around clinical trial data and pre-developed Shiny modules in a yml configuration file. It covers most of the standard safety tables and figures as well as a couple of efficacy modules. In the backend, it depends on tidytlg package for standard tables to keep consistent with static RTF tables based on J&J standard. At the same time, the Shiny App provides more features for users to explore data and get more information from the interactive outputs.\nOur presentation will give a brief introduction on the main idea of tidytlg package and mainly focus on baseline Shiny framework with a detailed demo on Shiny App generated based on this framework.\n\n\n\nChengcheng Ma, Legend\n6 years of working experience as a clinical programmer, Using R over 3 years.\nABSTRACT This presentation would introduce how to generate ADaM datasets based on tidyverse, admiral, admiralonco, and other pharmaverse packages. It will cover general ADaM mapping workflow, including batch reading sas datasets, generating key ADaM variables, reading ADaM variable labels and type from spec, generating xpt datasets, comparing with datasets generated from SAS, etc. The aim is to discuss the possible use of R to replace SAS in ADaM programming based on real Chinese studies.\n\n\n\nTake ADLB as an example Haoyong Yu, Novartis\nHaoyong has over 5 years of experience using both SAS and R and has been working as a statistical programmer at Novartis since 2020.\nABSTRACT This presentation provides hands-on experience of ADaM validation using R with ADLB as an example, covering the R programming workflow, step-by-step validation, creating custom functions, and comparing R and SAS. This practical example is designed for programmers with a basic understanding of R, but who may not have experience with clinical reporting packages, such as the pharmaverse project. By the end of this presentation, you will gain valuable experience and skills in ADaM validation using R.\n\n\n\nVictor Wu, Data Science\nVictor Wu, Ph.D., is Co-founder of Beijing Data Science Express Consulting Co., Ltd, Chair of China CDISC Coordinating Committee. Dr. Wu has over 15 years of work experience in data science, CDISC standards implementation (including CDASH, SDTM and ADaM) and data submission package preparation to multiple region’s agencies.\nABSTRACT To introduce R tools included in CDISC Open Source Alliance(COSA), such as Admir, tidyCDISC and Tplyr（to create ADaM datasets or TLFs with CDISC datasets). To discuss the future role of programmer of R and other programming language in clinical drug development process.\n\n\n\nJie Wang, Janssen\nJerry Wang, Data Engineer within the Data Engineering & Analytics team of Clinical & Statistical Programming Department, at Janssen China R & D. He is a technologically savvy statistical programmer who is focusing on identifying opportunities, driving optimization and innovation, applying traditional and cutting-edge approaches on clinical related data analytics. Prior to this role, he has 10 years of experiences in drug development industry. He joined Janssen in 2017 and accumulated extensive statistical programming and analysis experiences spanning phase I to phase III trials. Before Janssen, he worked at Pfizer R&D as Technical Supervisor, Clinical Programming.\nABSTRACT As more and more companies and organizations in pharmaceutical industry are adopting R to their statistical programming process, it is possible that more and more clinical studies and programmers will be utilizing RStudio Project workflow (as demonstrated in Chapter 8 of R4DS). Since every programmer on each team works in their own way, how can we make sure everyone on the team is using the same setting? To help ensure that teams share the same project standards, RStudio offers flexibility, where user can develop (in form of packages) many templates to be shared amongst users on the same team. This presentation will give a brief introduction to RStudio Project Template and how to create a simple project template from scratch. In addition, will also introduce and review a few different RStudio Project Templates shared by some of the most popular R packages and what we could learn from their design.\n\n\n\nQinghua Liao, Fosun\nLiao Qinghua has worked as a software engineer for more than 10 years. He joined the Biostatistics and Data Science Department of FosunPharma in early 2021, and is committed to construct statistical computing environment (SCE), develop automation tools for clinical trial submission and Shiny Apps for data visualization. He is an R language enthusiast.\nABSTRACT This topic discusses the deployment architecture of R shiny App in enterprise environment. Including using the {renv} package to keep the version of the R dependency package consistent, using Docker technology to keep R and the operating system consistent, and discussing how to use ShinyProxy to implement user authentication and authorization.\n\n\n\nQing Zou, Sanofi\nZou Qing, Statistical Programmer and R developer at Sanofi. In the last three years, he has supported a large application development and led multiple solid tumor studies in oncology at Sanofi. He was in charge of writing R training materials and provided R training to colleagues from global and transversal groups. He authored several internal R packages and API, focusing on document convention and biomarker analysis visualization.\nABSTRACT When developing a comprehensive and advanced interactive-data-driven R shiny application based on pre-processed clinical trial data (SDTMs and ADaMs), as the application module increases and more and more different clinical project involved in, performance issues may arise, while also considering how the development team can collaborate more efficiently. This presentation will illustrate our thinking about the following obstacles: • What key roles do we need to make up of the project team? • How to manage the growing complexity of Shiny application code? • What is the proper way to handle the customize needs between different projects? • How to use Gitlab to build a pipeline for automating the code checking and unit test? What strategies can we use to address these challenges? There are a few good practices to keep a growing app with better performance by taking the advantage of JavaScript and Database.\n\n\n\nChangming Yang, BeiGene\nChangming is working in BeiGene and have four years’ working experience on Clinical Programming and Data Analysis. He is interested in R and often use R in daily work.\nABSTRACT Code performance always have an invisible effect in our work. It may bring time consumption in code maintenance, or affect user experience in a shiny app. This share will be based on the speaker’s experience in daily wok, talking about vectorize and loop in R, and its effect in data frame operations; using parallel and RCPP in R; dplyr interface to data.table; and string operation based on regular expression in data processing.\n\n\n\nCarlos Pang, Novartis\n12 years working experience as a statistical programmer, Master of Mathematics\nABSTRACT In this presentation, we will discuss best practices for reading SAS outputs .sas7bdat, .rtf into R and explore techniques for comparing data frames in R using the arsenal package. In addition, we will demonstrate how to summarize and pool the comparison results through S3 function and R Shiny. These techniques can improve programmers’ daily work in a simple and user-friendly way and facilitate a smooth transition from SAS to R.\n\n\n\nShuang Gao, BeiGene\nShuang Gao Principal Statistical Programmer, Scientific Programming APAC at BeiGene Co. She has 6 years of experience in statistical programming. Before joining BeiGene in 2022, she worked in Sanofi/Parexel and participate in various therapeutical areas with experience in studies from Phase I-III. Aside from projects, She is enthusiastic about R software and her expertise in R is data visualization.\nABSTRACT Finding the root cause of a problem is always challenging. Most bugs are subtle and hard to find because if they were obvious, you would’ve avoided them in the first place. A good strategy helps. R comes with a simple set of debugging tools that RStudio amplifies. You can use these tools to better understand code that produces an error or returns an unexpected result. This topic help beginner on their journey from getting to know the art and science of debugging, starting with a general strategy, then following up with specific tools. we focus specifically on the R debugging tools built into the RStudio IDE; for more general advice on debugging in R (such as philosophy and problem-solving strategies).\n\n\n\nLiming Li, Roche\nLiming Li has been a senior data scientist in PD Data Sciences, Roche since 2019. He obtained master degree in biostatistics in Fudan university. He is now the technical engineering lead for chevron product of NEST, and also member of mmrm taskforce of American Statistical Association Biopharmaceutical Section Software Engineering Working Group. In his spare time, he enjoys playing with his cat.\nABSTRACT Mixed models for repeated measures (MMRM) analyses have been extensively used in the pharmaceutical industry. Still, a comprehensive and efficient implementation in R has yet to be available, compared to the commercial software SAS. To bridge this gap and move our analysis in the pharmaceutical area to next-gen tools, we decided to develop a new package, mmrm, in an open-sourced manner under ASA BIOP SWE working group. In this session, we will compare the new mmrm package, with other current implementations. In addition, we would like to share the experience of this cross-industrial collaboration.\n\n\n\nJingya Wang, Hengrui\nJingya Wang, graduated from New York University with a master’s degree in Biostatistics, and has 2 years of experience as a clinical programmer at Jiangsu Hengrui Pharmaceuticals Company Ltd. She is highly interested in using R language and SHINY in pharmaceutical clinical trials, and on the road of trying to develop SHINY applications to improve my work efficiency.\nABSTRACT This popPK web application is created based on R shiny. Users can use the shiny app to create datasets from raw-EDC data to support popPK analysis without knowing any programming knowledge. It supports EDC data from BioKnown or Rave EDC systems and provides step-by-step selections to guide users to keep the needed information. A basic workflow of using this app to create a popPK supporting dataset from the start will be introduced, along with some open-ended functions that allow users to create self-defined variables and deal with special occasions."
  },
  {
    "objectID": "program.html#program",
    "href": "program.html#program",
    "title": "China Pharma RUG meeting program",
    "section": "",
    "text": "Time\nTopic\nPresenter\nLocation\n\n\n\n\n8:30-9:00\nRegistration\n\n\n\n\n9:00-9:10\nWelcome\nYan Qiao, BeiGene, Chengeng Tian, Novartis\nBeijing, Shanghai\n\n\n9:10-9:20\nOpening Remarks\nLeo Li, BeiGene\nBeijing\n\n\n9:20-9:50\nMost recent update on NEST project\nJoe Zhu, Roche\nShanghai\n\n\n9:50-10:20\nBaseline shiny framework with TIDYTLG\nDavid Fan, Janssen\nShanghai\n\n\n10:20-10:50\nBreak\n\n\n\n\n10:50-11:10\nUse R to replace SAS in ADaM programming\nChengcheng Ma, Legend;\nNanjing\n\n\n11:10-11:30\nHands-on experience on ADaM validation using R\nHaoyong Yu, Novartis\nShanghai\n\n\n11:30-12:00\nUsing R in CDISC Standards Application\nVictor Wu, Data Science\nBeijing\n\n\n12:00-13:00\nLunch Break\n\n\n\n\n13:00-13:30\nCreate your own RStudio project template\nJie Wang, Janssen\nShanghai\n\n\n13:30-14:00\nShiny app deployment architecture for enterprise\nQinghua Liao, Fosun\nBeijing\n\n\n14:00-14:30\nPractice in building efficient R Shinny application for clinical trial report\nQing Zou, Sanofi\nBeijing\n\n\n14:30-15:00\nPractice in improving execution efficiency in R\nChangming Yang, BeiGene\nBeijing\n\n\n15:00-15:30\nBreak\n\n\n\n\n15:30-16:00\nPractice for comparing R data frame with SAS output\nCarlos Pang, Novartis\nShanghai\n\n\n16:00-16:30\nDebugging strategy for R\nShuang Gao, BeiGene\nBeijing\n\n\n16:30-16:55\n{mmrm}: a robust and comprehensive R package for implementing mixed models for repeated measures\nLiming Li, Roche\nShanghai\n\n\n16:55-17:20\nA Shiny app for creating datasets to support popPK analysis\nJingya Wang, Hengrui\nShanghai\n\n\n17:20-17:30\nClosing Remarks\nYanli Chang, Novartis\nShanghai\n\n\n\n\n\nJoe Zhu, Roche\nJoe Zhu is the lead software engineer of the NEST project at Roche. He has a PhD in statistics. Before joining Roche, Joe took two postdoc research positions at the University of Oxford, with a research focus on statistical genomics. He is an open source software advocator and developer; more details can be found at http://www.github.com/shajoezhu.\nABSTRACT New data types require new tools and methodologies and there is a need in biometrics to respond quickly to understand the ever increasing growth of data generated from clinical trials. In recent years, analysis software tools have taken huge leaps forward. Therefore, we have seized the business opportunity to build an R-based toolkit that will allow us to meet these challenges.\nSo far, we have open sourced several of our key packages on the Github. Many of our packages are well received by users. I would like to share some of our most recent updates including new open-source packages and tlg-catalog.\n\n\n\nDavid Fan, Janssen\nYubo (David) Fan is an Associate Director Portfolio Lead at Janssen China R&D. David started his pharmaceutical industry career in 2007 as a Biostatistician in PAREXEL Johnson & Johnson group and joined Janssen China R&D in 2014 as Statistical Programming Manager. Since then, he has grown as a leader with increasing responsibilities and built China CVM statistical programming team starting from April 2017.\nCurrently David is leading a local team with 11 members and responsible for managing CVM and NS portfolios. With high interest and great passion in R technology, David joined Janssen global R implementation initiative in 2019 and has been serving as the sub-team lead for baseline shiny group from 2021. Under his leadership, shiny sub-team generated the draft version of baseline shiny framework at the end of 2022 and is collaborating with study teams for piloting. David holds a PhD in Epidemiology and Health Statistics from Soochow University.\nABSTRACT Open-source technologies have been rapidly growing in recent years, more and more pharmaceutical companies are starting to use R as an alternative to SAS or additional software for clinical trial reporting. To ease the transition for programmers from SAS to R, C&SP group in Janssen R&D developed the tidytlg package for R to create the tables, listings, and graphs (TLG) for clinical study reports. This package has been published to the pharmaverse repository on GitHub.\nBaseline Shiny framework is an R package that helps user to create interactive Shiny applications, simply by shuffling around clinical trial data and pre-developed Shiny modules in a yml configuration file. It covers most of the standard safety tables and figures as well as a couple of efficacy modules. In the backend, it depends on tidytlg package for standard tables to keep consistent with static RTF tables based on J&J standard. At the same time, the Shiny App provides more features for users to explore data and get more information from the interactive outputs.\nOur presentation will give a brief introduction on the main idea of tidytlg package and mainly focus on baseline Shiny framework with a detailed demo on Shiny App generated based on this framework.\n\n\n\nChengcheng Ma, Legend\n6 years of working experience as a clinical programmer, Using R over 3 years.\nABSTRACT This presentation would introduce how to generate ADaM datasets based on tidyverse, admiral, admiralonco, and other pharmaverse packages. It will cover general ADaM mapping workflow, including batch reading sas datasets, generating key ADaM variables, reading ADaM variable labels and type from spec, generating xpt datasets, comparing with datasets generated from SAS, etc. The aim is to discuss the possible use of R to replace SAS in ADaM programming based on real Chinese studies.\n\n\n\nTake ADLB as an example Haoyong Yu, Novartis\nHaoyong has over 5 years of experience using both SAS and R and has been working as a statistical programmer at Novartis since 2020.\nABSTRACT This presentation provides hands-on experience of ADaM validation using R with ADLB as an example, covering the R programming workflow, step-by-step validation, creating custom functions, and comparing R and SAS. This practical example is designed for programmers with a basic understanding of R, but who may not have experience with clinical reporting packages, such as the pharmaverse project. By the end of this presentation, you will gain valuable experience and skills in ADaM validation using R.\n\n\n\nVictor Wu, Data Science\nVictor Wu, Ph.D., is Co-founder of Beijing Data Science Express Consulting Co., Ltd, Chair of China CDISC Coordinating Committee. Dr. Wu has over 15 years of work experience in data science, CDISC standards implementation (including CDASH, SDTM and ADaM) and data submission package preparation to multiple region’s agencies.\nABSTRACT To introduce R tools included in CDISC Open Source Alliance(COSA), such as Admir, tidyCDISC and Tplyr（to create ADaM datasets or TLFs with CDISC datasets). To discuss the future role of programmer of R and other programming language in clinical drug development process.\n\n\n\nJie Wang, Janssen\nJerry Wang, Data Engineer within the Data Engineering & Analytics team of Clinical & Statistical Programming Department, at Janssen China R & D. He is a technologically savvy statistical programmer who is focusing on identifying opportunities, driving optimization and innovation, applying traditional and cutting-edge approaches on clinical related data analytics. Prior to this role, he has 10 years of experiences in drug development industry. He joined Janssen in 2017 and accumulated extensive statistical programming and analysis experiences spanning phase I to phase III trials. Before Janssen, he worked at Pfizer R&D as Technical Supervisor, Clinical Programming.\nABSTRACT As more and more companies and organizations in pharmaceutical industry are adopting R to their statistical programming process, it is possible that more and more clinical studies and programmers will be utilizing RStudio Project workflow (as demonstrated in Chapter 8 of R4DS). Since every programmer on each team works in their own way, how can we make sure everyone on the team is using the same setting? To help ensure that teams share the same project standards, RStudio offers flexibility, where user can develop (in form of packages) many templates to be shared amongst users on the same team. This presentation will give a brief introduction to RStudio Project Template and how to create a simple project template from scratch. In addition, will also introduce and review a few different RStudio Project Templates shared by some of the most popular R packages and what we could learn from their design.\n\n\n\nQinghua Liao, Fosun\nLiao Qinghua has worked as a software engineer for more than 10 years. He joined the Biostatistics and Data Science Department of FosunPharma in early 2021, and is committed to construct statistical computing environment (SCE), develop automation tools for clinical trial submission and Shiny Apps for data visualization. He is an R language enthusiast.\nABSTRACT This topic discusses the deployment architecture of R shiny App in enterprise environment. Including using the {renv} package to keep the version of the R dependency package consistent, using Docker technology to keep R and the operating system consistent, and discussing how to use ShinyProxy to implement user authentication and authorization.\n\n\n\nQing Zou, Sanofi\nZou Qing, Statistical Programmer and R developer at Sanofi. In the last three years, he has supported a large application development and led multiple solid tumor studies in oncology at Sanofi. He was in charge of writing R training materials and provided R training to colleagues from global and transversal groups. He authored several internal R packages and API, focusing on document convention and biomarker analysis visualization.\nABSTRACT When developing a comprehensive and advanced interactive-data-driven R shiny application based on pre-processed clinical trial data (SDTMs and ADaMs), as the application module increases and more and more different clinical project involved in, performance issues may arise, while also considering how the development team can collaborate more efficiently. This presentation will illustrate our thinking about the following obstacles: • What key roles do we need to make up of the project team? • How to manage the growing complexity of Shiny application code? • What is the proper way to handle the customize needs between different projects? • How to use Gitlab to build a pipeline for automating the code checking and unit test? What strategies can we use to address these challenges? There are a few good practices to keep a growing app with better performance by taking the advantage of JavaScript and Database.\n\n\n\nChangming Yang, BeiGene\nChangming is working in BeiGene and have four years’ working experience on Clinical Programming and Data Analysis. He is interested in R and often use R in daily work.\nABSTRACT Code performance always have an invisible effect in our work. It may bring time consumption in code maintenance, or affect user experience in a shiny app. This share will be based on the speaker’s experience in daily wok, talking about vectorize and loop in R, and its effect in data frame operations; using parallel and RCPP in R; dplyr interface to data.table; and string operation based on regular expression in data processing.\n\n\n\nCarlos Pang, Novartis\n12 years working experience as a statistical programmer, Master of Mathematics\nABSTRACT In this presentation, we will discuss best practices for reading SAS outputs .sas7bdat, .rtf into R and explore techniques for comparing data frames in R using the arsenal package. In addition, we will demonstrate how to summarize and pool the comparison results through S3 function and R Shiny. These techniques can improve programmers’ daily work in a simple and user-friendly way and facilitate a smooth transition from SAS to R.\n\n\n\nShuang Gao, BeiGene\nShuang Gao Principal Statistical Programmer, Scientific Programming APAC at BeiGene Co. She has 6 years of experience in statistical programming. Before joining BeiGene in 2022, she worked in Sanofi/Parexel and participate in various therapeutical areas with experience in studies from Phase I-III. Aside from projects, She is enthusiastic about R software and her expertise in R is data visualization.\nABSTRACT Finding the root cause of a problem is always challenging. Most bugs are subtle and hard to find because if they were obvious, you would’ve avoided them in the first place. A good strategy helps. R comes with a simple set of debugging tools that RStudio amplifies. You can use these tools to better understand code that produces an error or returns an unexpected result. This topic help beginner on their journey from getting to know the art and science of debugging, starting with a general strategy, then following up with specific tools. we focus specifically on the R debugging tools built into the RStudio IDE; for more general advice on debugging in R (such as philosophy and problem-solving strategies).\n\n\n\nLiming Li, Roche\nLiming Li has been a senior data scientist in PD Data Sciences, Roche since 2019. He obtained master degree in biostatistics in Fudan university. He is now the technical engineering lead for chevron product of NEST, and also member of mmrm taskforce of American Statistical Association Biopharmaceutical Section Software Engineering Working Group. In his spare time, he enjoys playing with his cat.\nABSTRACT Mixed models for repeated measures (MMRM) analyses have been extensively used in the pharmaceutical industry. Still, a comprehensive and efficient implementation in R has yet to be available, compared to the commercial software SAS. To bridge this gap and move our analysis in the pharmaceutical area to next-gen tools, we decided to develop a new package, mmrm, in an open-sourced manner under ASA BIOP SWE working group. In this session, we will compare the new mmrm package, with other current implementations. In addition, we would like to share the experience of this cross-industrial collaboration.\n\n\n\nJingya Wang, Hengrui\nJingya Wang, graduated from New York University with a master’s degree in Biostatistics, and has 2 years of experience as a clinical programmer at Jiangsu Hengrui Pharmaceuticals Company Ltd. She is highly interested in using R language and SHINY in pharmaceutical clinical trials, and on the road of trying to develop SHINY applications to improve my work efficiency.\nABSTRACT This popPK web application is created based on R shiny. Users can use the shiny app to create datasets from raw-EDC data to support popPK analysis without knowing any programming knowledge. It supports EDC data from BioKnown or Rave EDC systems and provides step-by-step selections to guide users to keep the needed information. A basic workflow of using this app to create a popPK supporting dataset from the start will be introduced, along with some open-ended functions that allow users to create self-defined variables and deal with special occasions."
  },
  {
    "objectID": "program.html#abstract",
    "href": "program.html#abstract",
    "title": "Open Source Clinical Reporting summeR (2023-August-29)",
    "section": "Abstract",
    "text": "Abstract\n\nReporting tables form a central component of regulatory filings in the pharmaceutical industry\nGabe Becker\nThese tables are often complex, both in their conceptual structure and in the computations required to generate their individual cell values. Gabe will introduce the rtables package and show how visualization concepts, particularly faceting and the grammar of graphics, apply to tables generally and inform rtables’ ability to succinctly declare and create complex structured tables such as those included in clinical trial filings. Gabe will also give a brief update of the work of the R Consortium’s R Tables For Regulatory Submission (RTRS) working group.\n\n\nApply next-generation tools in real study\nLiu Jia (Roche)\nOur real study focuses on chronic hepatitis B (CHB) virus infection. The programming team of this study is a mix of advanced R programmers and novices. The team explored using R based tools, OAK and Admiral, to support SDTMv and ADAM QC. Through the exploration and application, the team has gained lots of valuable experience on next-generation tools. Roche is diligent to work on “next-generation” solutions for our data and analytics platforms to move towards increased automation. Next-generation tools OAK and Admiral are good examples. Admiral, toolbox for programming Clinical Data Interchange Standards Consortium (CDISC) compliant Analysis Data Model (ADaM) datasets in R. The OAK Garden aims to automate the clinical data flow from Data Collection to Data Tabulation thereby automating the study of SDTMv Datasets, SDTMv specifications, eSubmission Deliverables SDTM xpt files & SDTM Define.xml. With the help and inspiration of developers and other users, the team has overcame lots of difficulties and gained valuable experience. And we are pleased to share these with others.\n\n\nNEST (Now and Future)\nVincent Shen (Roche)\nOver the past 5 years, NEST has evolved from a small proof of concept to a well established project containing numerous R packages for streamlining analyses in clinical reporting and beyond. With ever-increasing engagement from internal and external users, NEST is well positioned to further influence and revolutionize how we generate insights for clinical research in the pharmaceutical industry. In this talk, we will share our development roadmap and highlight ideas and plans that we are actively pursuing for various products under the NEST umbrella. We will also share how open-sourcing and collaboration with other companies have benefited us so far in NEST, as well as our mid-to-long term vision of the project.\n\n\nECD liveTFL: Experience and feedback on an application based on the teal framework\nKaiping Yang (Beigene)\nThis paper introduces a web app called ECD liveTFL, which is developed based on the R-based teal framework. The app allows users to select different clinical trial studies and snapshot dates through UI to generate ADaM data for subsequent TFL analysis. The app consists of two parts: data processing and TFL platform. The data processing part is responsible for data preprocessing according to the user’s selection, and the TFL platform part is responsible for reading the processed data to perform interactive TFL analysis. This paper mainly introduces the extensions that the app has compared to the teal framework, as well as the development experience and feedback. Extensions ECD liveTFL app has the following extensions compared to the teal framework:\n\nExtension: The app extends the interactivity of the teal framework data preprocessing by splitting it into two parts, allowing users to generate different ADaM data according to their own choices.\nImprovement: The app enhances the display function of listing and figure by transforming the existing module, and adds the function of selecting the population analysis set of TFL.\nCustomization: The app builds a configuration file database for different studies and combines it with UI, allowing users to dynamically modify the configuration file and feedback to the server side to generate interactive TFL, improving the customization level of TFL.\nQuality: The app ensures the quality of TFL while maintaining its flexibility by using leader programmer to perform unified authority management. Development experience We also gained some experience in the development process, such as:\nBy building a configuration file database for different studies and combining it with UI, we achieved to let users dynamically modify the configuration file and feedback to the server side to generate interactive TFL, further enhancing the interactivity of TFL on more details. By using leader programmer to perform unified authority management, we ensured the quality of TFL while maintaining its flexibility.\nBy transforming the existing module, we enhanced the display function of listing and figure, and added the function of selecting the population analysis set of TFL. Development feedback We also received some feedback in the development process, mainly involving the following aspects:\ntern package: Provide more space for customizing statistical functions and statistical result labels;\nteal package: Add more layout frameworks and drop-down tabs functions;\nteal.reporter package: Enhance PDF and PPT rendering effects and custom style functions, and add a default function to download all TFL content.\n\n\n\nExploring the Advantages of R Admiral Package Over SAS Procedure for Programming ADaM Datasets\nGao Shuang (Beigene)\nR Admiral is an R package designed for programming ADaM datasets and streamlining the data preparation and analysis process. Compared to SAS procedure, R Admiral package has several advantages: • R Admiral is built on a modular approach where an ADaM dataset is constructed through a sequence of derivations. This feature allows for easy adjustments to the code by adding, removing, or modifying derivations. • R Admiral simplifies the data cleaning and tidying process, making data manipulation more flexible and easier to understand. In contrast, SAS uses programs like PROC SQL and PROC Transpose to achieve similar functions. • R Admiral offers more user-defined functions that can meet specific requirements.\nWhile both R Admiral and SAS can generate datasets, their syntax, libraries, and costs may influence the decision on which tool to use for a particular task. This topic compares the differences between the procedures/functions provided by SAS and R Admiral for generating ADaM datasets.\n\n\nTransfer learning of Teal packages\nZhou Kai (AstraZeneca)\nTeal is an open source framework for building interactive clinical reporting Shiny APP. AZ China team decided to adopt it as a supplement tool for TLF generation a year ago. It turned out that this tool can be very useful to generate interactive TLF in a very short time in line with high quality. But meanwhile, we encountered a lot of challenges and problems. We’d like to share with you our experience from AZ programming perspective.\n\n\nRevolutionize Data Exploration with Teal\nChendi Liao (Roche)\n{Teal} is an innovative open-source and scalable R-shiny based framework for interactive data analysis and exploration. It enables data scientists to streamline the creation of web applications, bringing data closer and faster to stakeholders, resulting in quicker insights and better-informed decisions. The framework’s features, such as dynamic data filtering, code reproducibility and report generation, elevate the user experience and promote transparency in the data exploration process. With over 50 analysis templates and the ability to easily integrate customized modules for different analyses or data types, {teal} offers a comprehensive and extendable solution for data exploration. In this talk, we will introduce the {teal} framework, highlight its key features, and share how this has been adopted by hundreds of data scientists inside our organization. For more information about {teal}, please visit https://insightsengineering.github.io/teal/.\n\n\nTable, Listings, and Graphs (TLG) Generation in Using tidytlg\nChinghan Hsiao (Janssen China Research & Development)\nIn recent years, there has been rapid growth in the adoption of open-source technologies. An increasing number of pharmaceutical companies are embracing R as a viable alternative to SAS or as supplementary software for clinical trial reporting. Gaining true proficiency in R, like any programming language, is a process that demands time, effort, and practical experience. Therefore, Janssen R&D has developed the tidytlg package to facilitate the smooth transition of programmers from SAS to R, this package has been released on GitHub.\nThe primary objective of the tidytlg package is to enable the creation of tables, listings, and graphs (TLG) for clinical study reports using the Tidyverse package. This can be achieved through two main methods with this package: 1. Functional method: Building a custom script for each TLG. 2. Metadata method: Building a generic script that utilizes column and table metadata to produce each TLG result. This package provides a framework for creating TLG outputs. The programming workflow includes the following steps: preparing the environment, processing the data, generating the results, and outputting them.\nIn this presentation, topics will cover a general processing flow for generating tables, listings, and graphs, as well as various functions such as defining column variables, generating analysis rows of summary statistics sequentially, and creating outputs (e.g., freq(), univar(), gentlg())."
  },
  {
    "objectID": "highlights.html",
    "href": "highlights.html",
    "title": "Highlights",
    "section": "",
    "text": "The meeting topics covers three main areas:\n\nOpen-source & Collaboration — many open-sourced R packages were shared at the conference, including NEST packages, {tidytlg}, {mmrm}. Participants were very excited about open-sourcing and sharing.\nExperience Embracing R in Pharma — It was great to see use cases of {admiral} and {tidytlg}, and other effort to support daily work with R to replace SAS, including tlg generations and QC.\nPractical Tips in R — It was great to learn how others encounter and overcome similar issues that we had in the past, and how shiny authentication was implemented, similar TLG templates, debugging tip."
  }
]